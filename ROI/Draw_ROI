%% ROI Freehand
clear;
close all;

%% Get background image.
% This will be a NanoSIMS image

file = 'LunarBeadH_1.png';

I = imread(['FirstFrame/', file]);


%% Name of file to save

textfile = [extractBefore(file, '.png'), '.txt'];

%% Type of shape

% Freehand = 1, Circle = 2, ellipse = 3, Polygon = 4
drawtype = 1;

% Get the number of pixels (will be 256x256 for the NanoSIMS images)
maxy = size(I, 1);
maxx = size(I, 2);

stopdrawing = 0;

while ~stopdrawing
    
    

%%

imshow(I);

figsizer(gcf, gca)

if drawtype == 1
    hold on
    h = drawfreehand('Color','red');
    
elseif drawtype == 2
   
    h = drawcircle('Color','red');
    radius = h.Radius;
    
elseif drawtype == 3
    
    h = drawellipse('Color','red');
    hold on
    semiaxes = h.SemiAxes;
    hold off
    
elseif drawtype == 4
    
    h = drawpolygon('Color','red');
        
else
    fprintf('Not a value');
end


position = h.Position;

Y = flip(position(:,2),1);
X = flip(position(:,1),1);

%%
close all

%%

%% Now test only including data within the plot
% -------------------------------------------------------------------------



if drawtype == 2
    theta=linspace(0,2*pi,200);
    X=radius*cos(theta) + X;
    Y=radius*sin(theta) + Y;
    
elseif drawtype == 3
    theta=linspace(0,2*pi,200);
    X=semiaxes(2)*cos(theta) + X;
    Y=semiaxes(1)*sin(theta) + Y;
    
end

% Create a mesh of all points (simulating the pixels)
[Xmesh, Ymesh] = meshgrid(0:maxx, 0:maxy);
% Find if pixels are inside the drawn polygon
[in, on] = inpolygon(Xmesh, Ymesh, X, Y);
%%

figure()
hold on
imshow(I)
hold on

figsizer(gcf, gca)
   
hold on
plot(Xmesh(in), Ymesh(in), 'r+') % Plot pixels in the polygon in red
%plot(Xmesh(~in), Ymesh(~in), 'b+') % Plot pixels outside the polygon in blue


stopdrawing = input('Happy with these points? (1/0): '); % 1 to continue 0 to break loop



close all

end

savepoints = 0;
if stopdrawing ~= 'x'
savepoints = input('Save these points? (1/0): ');

    if savepoints

        vertices = table(X, Y);
        writetable(vertices, textfile);

    end
end

fprintf('Done! \n')

function figsizer(gcf, gca)

    fig = gcf;
    fig.Units = 'pixels';
    fig.Position(3:4) = [500, 500];
    g = gca;
    g.Units = 'pixels';
    g.Position(1:2) = 10;
    g.Position(3:4) = 480; %= [0, 0, 500, 500];

end
