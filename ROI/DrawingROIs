%% ROI Freehand
clear;
close all;

%% Name of file to save

textfile = 'CatVertices.txt';

%% Type of shape

% Freehand = 1, Circle = 2, ellipse = 3, Polygon = 4
drawtype = 1;

%% Get background image.
% This will be a NanoSIMS image

I = imread('cat.png');

% Get the number of pixels (will be 256x256 for the NanoSIMS images)
maxy = size(I, 1);
maxx = size(I, 2);

stopdrawing = 0;

while ~stopdrawing
    
    if stopdrawing == 'x'
        break;
    end

%%

imshow(I);

fig = gcf;
fig.Units = 'pixels';
fig.Position(3:4) = [500, 500];
g = gca;
g.Units = 'pixels';
g.Position = [0, 0, 500, 500];

if drawtype == 1
    hold on
    h = drawfreehand('Color','red');
    
elseif drawtype == 2
   
    h = drawcircle('Color','red');
    radius = h.Radius;
    
elseif drawtype == 3
    
    h = drawellipse('Color','red');
    hold on
    semiaxes = h.SemiAxes;
    hold off
    
elseif drawtype == 4
    
    h = drawpolygon('Color','red');
        
else
    fprintf('Not a value');
end


position = h.Position;

y = flip(position(:,2),1);
x = flip(position(:,1),1);

%%
close all

%%

%% Now test only including data within the plot
% -------------------------------------------------------------------------



if drawtype == 2
    theta=linspace(0,2*pi,200);
    x=radius*cos(theta) + x;
    y=radius*sin(theta) + y;
    
elseif drawtype == 3
    theta=linspace(0,2*pi,200);
    x=semiaxes(2)*cos(theta) + x;
    y=semiaxes(1)*sin(theta) + y;
    
end

% Create a mesh of all points (simulating the pixels)
[Xmesh, Ymesh] = meshgrid(0:maxx, 0:maxy);
% Find if pixels are inside the drawn polygon
[in, on] = inpolygon(Xmesh, Ymesh, x, y);
%%

figure()
hold on
imshow(I)
hold on

fig = gcf;
fig.Units = 'pixels';
fig.Position(3:4) = [500, 500];
g = gca;
g.Units = 'pixels';
g.Position = [0, 0, 500, 500];

        
hold on
plot(Xmesh(in), Ymesh(in), 'r+') % Plot pixels in the polygon in red
plot(Xmesh(~in), Ymesh(~in), 'b+') % Plot pixels outside the polygon in blue


stopdrawing = input('Happy with these points? (1/0/x): '); % 1 to continue 0 to break loop

close all
end

savepoints = 0;
if stopdrawing == 'x'
savepoints = input('Save these points? (1/0): ');
end

if savepoints
    
    vertices = table(x, y);
    writetable(vertices, textfile);
    
end

fprintf('Done!')
